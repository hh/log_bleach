#!/usr/bin/env ruby

# Copyright 2013 L. Wayne Walker <wwalker@solid-constructs.com,wwalker@bybent.com> All Rights Reserved.

require 'erb'

BASE_DIR = ENV['HOME'] + '/.log_bleach/'

IP_ADDRESS                 = '\b(?:[012]?\d?\d\.){3}[012]?\d?\d\b'
TS_SYSLOG                  = '(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [ 0123][0-9] \d\d:\d\d:\d\d'
THREE_LETTER_WEEKDAY       = '\b(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)\b'
TS_SYSLOG_WITH_WEEKDAY     = THREE_LETTER_WEEKDAY + '\s+' + TS_SYSLOG
SYSLOG_PREFIX              = TS_SYSLOG + ' \S+ \S+(?:\[\d+\])?: '
SYSLOG_PREFIX_WITH_WEEKDAY = TS_SYSLOG_WITH_WEEKDAY + ' \S+ \S+(?:\[\d+\])?: '
ISODATE                    = '\d\d\d\d-\d\d-\d\d[ T]\d\d:\d\d:\d\d'
ISODATE_WITH_TZ_TLA        = ISODATE + '\s+[A-Z]{3}\b'
ISODATE_WITH_USEC          = '\d\d\d\d-\d\d-\d\d[ T]\d\d:\d\d:\d\d.\d\d\d\d\d\d'
RN_LOG_PREFIX              = ISODATE_WITH_USEC + '\s+\d+\s+(LINE|DEBUG|WARNING|NOTICE|INFO|CRITICAL|ERROR)\s+--\s+\d+\s+\| '
HEXNUM                     = '(?:\b|0[xX])[A-Fa-f0-9]*[A-Fa-f][A-Fa-f0-9]*\b'
FLOAT                      = '[\-+]?\d+\.\d+(?:[eE][\-+]?\d+)?'
INTEGER                    = '[\-+]?\d+'
REGEX_SPECIAL_CHAR         = '[\|\+\{\}\(\)\[\]\$\^\?\\\\\*\`]'
FULL_FILE_PATH             = '(?:\/[\-A-Za-z0-9_.,]+){2,}\/?'
RUBY_STACK_TRACE_FILE_LINE = FULL_FILE_PATH + ':\d+:in\s+\S+'
WHITESPACE_REGION          = '\s+'

PATTERN_WORD               = '\S+'
PATTERN_END_MATCHING       = '.*'

basename = ARGV[0]

source = File.open(BASE_DIR + 'source/' + basename)
parsed = File.open(BASE_DIR + 'parsed/' + basename + '.parsed', 'w')
perlre = File.open(BASE_DIR + 'perlre/' + basename + '.perlre', 'w')



source.lines.each do |line|
  line.chomp!
  # Windows is evil
  line.gsub!(//,'')

  next if line.match(/^\s+$/)
  # Find datestamp if any and replace it
  line.gsub!(/#{RN_LOG_PREFIX}/              , '<%=RN_LOG_PREFIX%>')
  line.gsub!(/#{ISODATE_WITH_TZ_TLA}/        , '<%=ISODATE_WITH_TZ_TLA%>')
  line.gsub!(/#{ISODATE_WITH_USEC}/          , '<%=ISODATE_WITH_USEC%>')
  line.gsub!(/#{ISODATE}/                    , '<%=ISODATE%>')
  line.gsub!(/#{SYSLOG_PREFIX_WITH_WEEKDAY}/ , '<%=SYSLOG_PREFIX_WITH_WEEKDAY%>')
  line.gsub!(/#{SYSLOG_PREFIX}/              , '<%=SYSLOG_PREFIX%>')
  line.gsub!(/#{TS_SYSLOG_WITH_WEEKDAY}/     , '<%=TS_SYSLOG_WITH_WEEKDAY%>')
  line.gsub!(/#{TS_SYSLOG}/                  , '<%=TS_SYSLOG%>')
  line.gsub!(/#{THREE_LETTER_WEEKDAY}/       , '<%=THREE_LETTER_WEEKDAY%>')
  line.gsub!(/#{RUBY_STACK_TRACE_FILE_LINE}/ , '<%=RUBY_STACK_TRACE_FILE_LINE%>')
  line.gsub!(/#{FULL_FILE_PATH}/             , '<%=FULL_FILE_PATH%>')
  line.gsub!(/#{IP_ADDRESS}/                 , '<%=IP_ADDRESS%>')
  line.gsub!(/#{FLOAT}/                      , '<%=FLOAT%>')
  line.gsub!(/#{HEXNUM}/                     , '<%=HEXNUM%>')
  line.gsub!(/#{INTEGER}/                    , '<%=INTEGER%>')
  line.gsub!(/#{WHITESPACE_REGION}/          , '<%=WHITESPACE_REGION%>')
  line.gsub!(/(#{REGEX_SPECIAL_CHAR})/) { |m| '\\' + m }
  line.gsub!(/PATTERN_WORD/, '<%=PATTERN_WORD%>')
  line.gsub!(/PATTERN_END_MATCHING/, '<%=PATTERN_END_MATCHING%>')
  line = '\\A' + line + '\\s*\\Z'
  perlre.puts ERB.new(line).result
  line.gsub!(/<%=/, '<%= ')
  line.gsub!(/%>/, ' %>')
  parsed.puts line
end
